@page "/batchDistributionReport"
@inject IFishService FishService
@inject IBoatLoadService BoatLoadService
@inject IPurchaseBatchService PurchaseBatchService
@inject IReportService ReportService

<div class="content-header">
    <div class="container-fluid">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">Batch Distribution Report</li>
            </ol>
        </nav>

        <hr>
    </div>
</div>


<Card Hoverable Title="Batch Distribution Report">
    <div class="row mb-3">
        <div class="col-md-3">
            <Select DataSource="@BoatLoads"
                    Placeholder="Select Batch  ..."
                    DefaultActiveFirstOption="false"
                    ValueName="@nameof(BoatLoad.BoatLoadId)"
                    @bind-Value="@BatchId"
                    EnableSearch
                    AllowClear>
            </Select>
        </div>
        <div class="col-md-3">
            <Button Type="@ButtonType.Primary" HtmlType="submit" OnClick="Search">
                Search
            </Button>
        </div>
    </div>

    <Table DataSource="PurchaseBatchs" PageSize="10" Loading="_loading" Size="TableSize.Small" Class="table table-responsive">
        <Column @bind-Field="@context.BoatLoadId" Title="Batch Number">Batch-@context.BoatLoadId</Column>
        <Column @bind-Field="@context.PurchaseOrderId" Title="Purchase Order">Order-@context.PurchaseOrder.PurchaseOrderId</Column>
        <Column @bind-Field="@context.Quantity">@context.Quantity KG</Column>
        <Column @bind-Field="@context.FishId" Title="Fish Type">
            @foreach (var item in Fishs)
            {
                if (item.FishId == context.FishId)
                {
                    @item.FishName
                }
            }
        </Column>
    </Table>
</Card>

@code {

    bool _loading;
    public int BatchId { get; set; }

    public BoatLoad BoatLoad { get; set; } = new BoatLoad();
    public List<BoatLoad> BoatLoads { get; set; } = new List<BoatLoad>();
    public List<PurchaseBatch> PurchaseBatchs { get; set; } = new List<PurchaseBatch>();
    public List<Fish> Fishs { get; set; } = new List<Fish>();

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        BoatLoads = (await BoatLoadService.GetBoatLoads()).ToList();
        Fishs = (await FishService.GetFishs()).ToList();
        _loading = false;
    }

    protected async Task Search()
    {
        _loading = true;
        PurchaseBatchs = (await ReportService.BatchDistribution(BatchId)).ToList();
        _loading = false;
    }


}