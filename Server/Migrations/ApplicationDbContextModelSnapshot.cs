// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectX.Server.Models;

namespace ProjectX.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectX.Shared.Models.Agent", b =>
                {
                    b.Property<int>("AgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgentAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AgentEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AgentPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AgentId");

                    b.ToTable("Agents");

                    b.HasData(
                        new
                        {
                            AgentId = 1,
                            AgentAddress = "Agent 1 Address",
                            AgentEmail = "Agent1@gmail.com",
                            AgentName = "Agent 1",
                            AgentPhone = "0995514212"
                        },
                        new
                        {
                            AgentId = 2,
                            AgentAddress = "Agent 2 Address",
                            AgentEmail = "Agent2@gmail.com",
                            AgentName = "Agent 2",
                            AgentPhone = "0995514212"
                        },
                        new
                        {
                            AgentId = 3,
                            AgentAddress = "Agent 3 Address",
                            AgentEmail = "Agent3@gmail.com",
                            AgentName = "Agent 3",
                            AgentPhone = "0995514212"
                        });
                });

            modelBuilder.Entity("ProjectX.Shared.Models.Boat", b =>
                {
                    b.Property<int>("BoatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BoatCaptain")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BoatName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("BoatId");

                    b.ToTable("Boats");

                    b.HasData(
                        new
                        {
                            BoatId = 1,
                            BoatCaptain = "Captain 1",
                            BoatName = "Boat 1"
                        },
                        new
                        {
                            BoatId = 2,
                            BoatCaptain = "Captain 2",
                            BoatName = "Boat 2"
                        },
                        new
                        {
                            BoatId = 3,
                            BoatCaptain = "Captain 3",
                            BoatName = "Boat 3"
                        });
                });

            modelBuilder.Entity("ProjectX.Shared.Models.BoatLoad", b =>
                {
                    b.Property<int>("BoatLoadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoadDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("BoatLoadId");

                    b.HasIndex("BoatId");

                    b.ToTable("BoatLoads");
                });

            modelBuilder.Entity("ProjectX.Shared.Models.BoatLoadDetails", b =>
                {
                    b.Property<int>("BoatLoadDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoatLoadId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliveredDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FishId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BoatLoadDetailsId");

                    b.HasIndex("BoatLoadId");

                    b.HasIndex("FishId");

                    b.ToTable("BoatLoadDetails");
                });

            modelBuilder.Entity("ProjectX.Shared.Models.Fish", b =>
                {
                    b.Property<int>("FishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FishName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("FishId");

                    b.ToTable("Fishs");

                    b.HasData(
                        new
                        {
                            FishId = 1,
                            FishName = "Tilapia",
                            Quantity = 100
                        },
                        new
                        {
                            FishId = 2,
                            FishName = "Mackerel",
                            Quantity = 100
                        },
                        new
                        {
                            FishId = 3,
                            FishName = "Grouper",
                            Quantity = 100
                        });
                });

            modelBuilder.Entity("ProjectX.Shared.Models.PurchaseBatch", b =>
                {
                    b.Property<int>("PurchaseBatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoatLoadDetailsId")
                        .HasColumnType("int");

                    b.Property<int>("BoatLoadId")
                        .HasColumnType("int");

                    b.Property<int>("FishId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("PurchaseBatchId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseBatchs");
                });

            modelBuilder.Entity("ProjectX.Shared.Models.PurchaseDetails", b =>
                {
                    b.Property<int>("PurchaseDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FishId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("PurchaseDetailsId");

                    b.HasIndex("FishId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseDetails");
                });

            modelBuilder.Entity("ProjectX.Shared.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("PurchaseOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("PurchaseOrderId");

                    b.HasIndex("AgentId");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("ProjectX.Shared.Models.BoatLoad", b =>
                {
                    b.HasOne("ProjectX.Shared.Models.Boat", "Boat")
                        .WithMany()
                        .HasForeignKey("BoatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boat");
                });

            modelBuilder.Entity("ProjectX.Shared.Models.BoatLoadDetails", b =>
                {
                    b.HasOne("ProjectX.Shared.Models.BoatLoad", "BoatLoad")
                        .WithMany()
                        .HasForeignKey("BoatLoadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectX.Shared.Models.Fish", "Fish")
                        .WithMany()
                        .HasForeignKey("FishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoatLoad");

                    b.Navigation("Fish");
                });

            modelBuilder.Entity("ProjectX.Shared.Models.PurchaseBatch", b =>
                {
                    b.HasOne("ProjectX.Shared.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("ProjectX.Shared.Models.PurchaseDetails", b =>
                {
                    b.HasOne("ProjectX.Shared.Models.Fish", "Fish")
                        .WithMany()
                        .HasForeignKey("FishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectX.Shared.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fish");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("ProjectX.Shared.Models.PurchaseOrder", b =>
                {
                    b.HasOne("ProjectX.Shared.Models.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });
#pragma warning restore 612, 618
        }
    }
}
